@use '../abstracts' as *;

.favorite-section {
  max-width: 1360px;
  @include flex(center, center, column);
  gap: 40px;
  .slider-block {
    @include flex(center, space-between);
    gap: 40px;
    max-width: 1360px;
    width: 100%;
    .arrow {
      @include flex(center, center);
      border-radius: 100px;
      border: 1px solid $gray;
      width: 60px;
      height: 60px;
      min-height: 60px;
      min-width: 60px;
      svg {
        width: 24px;
        height: 24px;
      }
    }
    .sliders {
      display: flex;
      overflow: hidden;
      max-width: 480px;
      .slider {
        @include flex(center, center, column);
        width: 100%;
        max-height: 640px;
        max-width: 480px;
        flex-wrap: wrap;
        gap: 20px;
        .slider-img {
          width: 480px;
          height: 480px;
        }   
        .slider-textblock {
          max-width: 480px;
          width: 100%;
          display: flex;
          flex-direction: column;
          gap: 16px;
          text-align: center;
          font-family: Inter;
          font-style: normal;
          color: $dark;
          .slider-title {
            font-weight: 600;
            line-height: 125%;
            font-size: 24px;
          }
          .slider-text {
            font-size: 16px;
            font-weight: 400;
            line-height: 150%;
            color: $dark;
            &:last-child {
              font-weight: 600;
              line-height: 125%;
              font-size: 24px;
            }
          }
        }
      }
    }
  }
  .slider-progressbar {
    display: flex;
    gap: 12px;
    .progressbar-line {
      width: 40px;
      height: 4px;
      border-radius: 100px;
      background-color: $accent-light;
      position: relative;
      &.active-progress-line {
        &::before {
          content: '';
          position: absolute;
          border-radius: 100px;
          background-color: $gray;
          width: 100%;
          height: 100%;
          animation: progressBarAnimation 6.9s linear forwards;
        }
        &.pause::before {
          animation-play-state: paused;
        }
      }
    }
  }
}